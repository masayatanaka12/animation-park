.topGalleryModal {
  clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0% 100%);
  animation: none;
}

/* 開くアニメーション */
.topGalleryModal.active {
  animation: modalOpen 0.7s 0.2s ease-out forwards;
}

/* 閉じるアニメーション */
.topGalleryModal.closing {
  animation: modalClose 0.7s 0s ease forwards;
}

@keyframes modalOpen {
  from {
    clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0% 100%);
  }
  to {
    clip-path: polygon(0 0%, 100% 0%, 100% 100%, 0% 100%);
  }
}

@keyframes modalClose {
  from {
    clip-path: polygon(0 0%, 100% 0%, 100% 100%, 0% 100%);
  }
  to {
    clip-path: polygon(0 0%, 100% 0%, 100% 0%, 0% 0%);
  }
}

/* モーダルを開くとき */
.topGalleryModal.active {
  /* アニメーションを指定 */
  animation: modalOpen 0.5s 0.2s ease-in-out forwards;
}

@keyframes modalOpen {
  from {
    clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0% 100%);
  }
  to {
    clip-path: polygon(0 0%, 100% 0%, 100% 100%, 0% 100%);
  }
}


.topGallery__inner{
  // padding: 0 2rem;
}

.topGallery__cards{
  
  @include mq(tb){
    display: flex;
    flex-wrap: wrap;
  }
}

.topGalleryModal__bg{
  position: fixed;
  width: 100vw;
  height: 100vh;
  background: rgba($color: #000000, $alpha: 0.6);
  left: 0;
  top: 0;
  cursor: pointer;
  opacity: 0;
  pointer-events: none;
  transition: 0.6s opacity 0s;
}

.topGalleryModal__bg.active{
  opacity: 1;
  pointer-events: auto;
  transition-delay: 0s;
}

.topGalleryModal__close{
  position: absolute;
  width: 6rem;
  height: 6rem;
}

// .topGallerySample{
//   position: fixed;
//   left: 0;
//   top: 0;
//   z-index: 10;
//   width: 100vw;
//   height: 100vh;
//   background: #fff;
//   overflow-y: scroll;
//   opacity: 0;
//   pointer-events: none;
//   transition: 0.3s opacity;
//   background: $c-white;
// }

.topGallerySample__close{
  position: fixed;
  display: inline-block;
  right: 0;
  top: 0;
  background: $c-black;
  color: $c-white;
  border-bottom-left-radius: 5px;
  font-weight: 600;
  font-size: 1.4rem;
  padding: 1rem 3rem;
  cursor: pointer;
  border: 2px solid $c-black;
  z-index: 1;
}

.topGallerySample.active{
  opacity: 1;
  pointer-events: auto;
}

.topGallerySample__wrapper{
  height: 200vh;
}



/* CSS *//* CSS */
.topGallerySample {
  position: fixed;
  left: 0; top: 0;
  z-index: 10;
  width: 100vw; height: 100vh;
  overflow-y: scroll;       /* モーダル内スクロール */
}

.sample {
  height: 200vh;             /* 中身の高さを確保 */
}

.sample__fv{
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sample__fv p{
  letter-spacing: 0.1em;
  color: $c-black;
  text-align: center;
  font-size: 3rem;
  letter-spacing: 0.3em;
}

/* 初期状態：少し下から、透明度0 */
.fadeup {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 5s ease-out,
              transform 5s ease-out;
}

/* 画面内に入ったらこのクラスを追加 */
.fadeup.is-visible {
  opacity: 1;
  transform: translateY(0);
}


.test{
  height: 100vh;
}

.sample01__content{
  padding-bottom: 100px;
}


.sample01__imgWrap{
  display: grid;
  gap: 100px;
}
.sample01__img {
  max-width: 600px;
  margin: auto;

  /* 下準備としてマスク設定だけしておく（アニメーション自体はしない） */
  mask-image: linear-gradient(135deg,
    rgba(0, 0, 0, 1)   30%,
    rgba(0, 0, 0, 0.4) 45%,
    rgba(0, 0, 0, 0)   55%,
    rgba(0, 0, 0, 0)   100%);
  -webkit-mask-image: linear-gradient(135deg,
    rgba(0, 0, 0, 1)   30%,
    rgba(0, 0, 0, 0.4) 45%,
    rgba(0, 0, 0, 0)   55%,
    rgba(0, 0, 0, 0)   100%);
  mask-size: 250% 250%;
  -webkit-mask-size: 250% 250%;
  mask-repeat: no-repeat;
  -webkit-mask-repeat: no-repeat;
  /* 初期位置を「マスクがかかった」状態に */
  mask-position: 130% 130%;
  -webkit-mask-position: 130% 130%;
}

/* ビューに入った時に .js-mask クラスを付与してアニメーションを開始 */
.sample01__img.js-mask {
  animation: mask-animation 1.5s linear forwards;
}

@keyframes mask-animation {
  0% {
    mask-position: 130% 130%;
    -webkit-mask-position: 130% 130%;
  }
  100% {
    mask-position: 0 0;
    -webkit-mask-position: 0 0;
  }
}
